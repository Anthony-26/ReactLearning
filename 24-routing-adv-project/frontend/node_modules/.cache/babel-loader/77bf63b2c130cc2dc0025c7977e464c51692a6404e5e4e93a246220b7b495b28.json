{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Documents\\\\React\\\\ReactLearning\\\\24-routing-adv-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: data.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json({\n      message: 'Could not fetch events.',\n      status: 500\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","resolve","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/antho/Documents/React/ReactLearning/24-routing-adv-project/frontend/src/pages/Events.js"],"sourcesContent":["import { defer, json, useLoaderData, Await } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n\r\n  return (<Await resolve={data.events}></Await>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n  \r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    return json(\r\n      { message: 'Could not fetch events.', status: 500 },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\nexport function loader() {\r\n  return defer({\r\n    events: loadEvents(),\r\n  });\r\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAG5B,oBAAQI,OAAA,CAACH,KAAK;IAACO,OAAO,EAAED,IAAI,CAACE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE/C;AAACP,EAAA,CANQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAc,EAAA,GADnBT,UAAU;AAQnB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EAE1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOnB,IAAI,CACT;MAAEoB,OAAO,EAAE,yBAAyB;MAAEC,MAAM,EAAE;IAAI,CAAC,EACnD;MAAEA,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOvB,KAAK,CAAC;IACXW,MAAM,EAAEM,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}