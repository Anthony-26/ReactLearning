{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Documents\\\\React\\\\ReactLearning\\\\24-routing-adv-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json({\n      message: 'Could not fetch events.',\n      status: 500\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n}\nexport async function action({\n  request,\n  params\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","EventList","_c","loadEvent","id","response","fetch","ok","message","status","loadEvents","resData","events","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/antho/Documents/React/ReactLearning/24-routing-adv-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, redirect, useRouteLoaderData } from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n  const data = useRouteLoaderData('event-detail');\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n      <EventList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id){\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: 'Could not fetch details for selected event.' },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    return json(\r\n      { message: 'Could not fetch events.', status: 500 },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  \r\n}\r\n\r\nexport async function action({ request, params }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: 'Could not delete event.' }, { status: 500 });\r\n  }\r\n  return redirect('/events');\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AAErE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCX,OAAA,CAACY,SAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEP;AAACP,EAAA,CATQD,eAAe;EAAA,QACTN,kBAAkB;AAAA;AAAAgB,EAAA,GADxBV,eAAe;AAWxB,eAAeA,eAAe;AAE9B,eAAeW,SAASA,CAACC,EAAE,EAAC;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CACR;MAAEwB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,eAAeK,UAAUA,CAAA,EAAG;EAC1B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOvB,IAAI,CACT;MAAEwB,OAAO,EAAE,yBAAyB;MAAEC,MAAM,EAAE;IAAI,CAAC,EACnD;MAAEA,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,MAAME,OAAO,GAAG,MAAMN,QAAQ,CAACrB,IAAI,CAAC,CAAC;IACrC,OAAO2B,OAAO,CAACC,MAAM;EACvB;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMX,EAAE,GAAGW,MAAM,CAACC,OAAO;AAG3B;AAEA,OAAO,eAAeC,MAAMA,CAAC;EAAEH,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGU,OAAO,EAAE;IACtEE,MAAM,EAAEJ,OAAO,CAACI;EAClB,CAAC,CAAC;EAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAAEwB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EACA,OAAOxB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAiB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}